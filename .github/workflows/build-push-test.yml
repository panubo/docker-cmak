name: build and push on main

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Pull the cmak version from the Dockerfile
      - name: Get CMAK version
        id: cmak_version
        run: |
          sed -E -e '/CMAK_VERSION=/!d' -e 's/^[ \t\n\r\f\v]+CMAK_VERSION=([^ \t\n\r\f\v]+).*/cmak_version=\1/' Dockerfile >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            panubo/cmak
            quay.io/panubo/cmak
          # generate Docker tags based on the following events/attributes
          tags: |
            ${{ steps.cmak_version.outputs.cmak_version }}
            # type=schedule
            # type=ref,event=branch
            # type=ref,event=pr
            # type=semver,pattern={{version}}
            # type=semver,pattern={{major}}.{{minor}}
            # type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.PANUBUILD_DOCKERHUB_USERNAME }}
          password: ${{ secrets.PANUBUILD_DOCKERHUB_TOKEN }}

      - name: Login to Quay.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.PANUBUILD_QUAYIO_USERNAME }}
          password: ${{ secrets.PANUBUILD_QUAYIO_TOKEN }}

      - name: Build & Test
        run:
          make build test

      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64 # ,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
